{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alexagrau/Documents/SeniorDesign/Senior-Design/screens/WeatherHome.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Calendar } from 'react-native-calendars';\nimport { LocaleConfig } from 'react-native-calendars';\nimport { Form, Button } from \"native-base\";\nimport styles from \"../Style\";\nLocaleConfig.locales['es'] = {\n  monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\n  dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],\n  dayNamesShort: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\n  today: 'Hoy'\n};\nLocaleConfig.defaultLocale = 'es';\nexport var WeatherHome = function (_React$Component) {\n  _inherits(WeatherHome, _React$Component);\n\n  var _super = _createSuper(WeatherHome);\n\n  function WeatherHome() {\n    _classCallCheck(this, WeatherHome);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WeatherHome, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var date = new Date();\n      var dateString = date.toISOString().slice(0, 10);\n      var day = date.getDate().toString();\n      var month = date.getMonth() + 1;\n      var year = date.getFullYear();\n      var dateOb = {\n        \"dateString\": dateString,\n        \"day\": day,\n        \"month\": month,\n        \"year\": year\n      };\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.headerHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return Linking.openURL('https://www.asdenic.org');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/asdenic.png\"),\n        style: styles.asdenicLogo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return Linking.openURL('https://www.scu.edu/engineering/labs--research/labs/frugal-innovation-hub/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/frugalHub.png\"),\n        style: styles.frugalHubLogoHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Welcome');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.logoutButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, \"Cerrar sesi\\xF3n\"))), React.createElement(View, {\n        style: styles.pageContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Home', {\n            admin: false,\n            bigAdmin: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.backText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, '<', \" Atr\\xE1s\")), React.createElement(Text, {\n        style: styles.waterTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"Clima\"), React.createElement(View, {\n        style: styles.weatherForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, React.createElement(Calendar, {\n        monthFormat: \"MMMM 'de' yyyy\",\n        maxDate: dateString,\n        onDayPress: function onDayPress(day) {\n          _this.props.navigation.navigate('WeatherDay', {\n            date: day\n          });\n        },\n        theme: {\n          todayTextColor: '#4a8eff',\n          arrowColor: '#4a8eff',\n          textDayFontSize: 18,\n          textMonthFontSize: 24,\n          textDayHeaderFontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        full: true,\n        rounded: true,\n        success: true,\n        style: styles.blueButtonFull,\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('WeatherReport', {\n            date: dateOb,\n            morning: true,\n            latest: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, \"\\xDAltimo Informe del Clima\"))), React.createElement(Button, {\n        style: styles.link,\n        onPress: function onPress() {\n          return Linking.openURL('https://chat.whatsapp.com/BoW628hRShe5orkVmwG6Xc');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, 'Contáctanos sobre el clima por WhatsApp aquí'))), React.createElement(View, {\n        style: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return WeatherHome;\n}(React.Component);\nWeatherHome.navigationOptions = {\n  title: 'WeatherHome'\n};\nexport default WeatherHome;","map":{"version":3,"sources":["/Users/alexagrau/Documents/SeniorDesign/Senior-Design/screens/WeatherHome.js"],"names":["React","Calendar","LocaleConfig","Form","Button","styles","locales","monthNames","dayNames","dayNamesShort","today","defaultLocale","WeatherHome","date","Date","dateString","toISOString","slice","day","getDate","toString","month","getMonth","year","getFullYear","dateOb","container","headerHome","Linking","openURL","require","asdenicLogo","frugalHubLogoHome","props","navigation","navigate","logoutButton","pageContent","backButton","admin","bigAdmin","backText","waterTitle","weatherForm","todayTextColor","arrowColor","textDayFontSize","textMonthFontSize","textDayHeaderFontSize","blueButtonFull","morning","latest","buttonText","link","incidentButton","footer","Component","navigationOptions","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, Image, TouchableOpacity, Linking, SafeAreaView } from 'react-native'\nimport { Calendar } from 'react-native-calendars'\nimport {LocaleConfig} from 'react-native-calendars'\nimport { Form, Button } from \"native-base\"\nimport styles from '../Style'\n\nLocaleConfig.locales['es'] = {\n    monthNames: ['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'],\n    dayNames: ['Domingo','Lunes','Martes','Miércoles','Jueves','Viernes','Sábado'],\n    dayNamesShort: ['D','L','M','M','J','V','S'],\n    today: 'Hoy'\n  };\nLocaleConfig.defaultLocale = 'es';\n\nexport class WeatherHome extends React.Component {\n    static navigationOptions = {\n        title: 'WeatherHome',\n    };\n\n    render() {\n        // hard coded to pull current date \"morning\" report\n        // once database set up, pull the latest report in the database\n        let date = new Date();\n        let dateString = date.toISOString().slice(0,10);\n        let day = date.getDate().toString();\n        let month = date.getMonth()+1;\n        let year = date.getFullYear();\n        let dateOb = {\"dateString\":dateString, \"day\":day, \"month\":month, \"year\":year};\n\n        return (\n            <View style={styles.container}>\n                <View style={styles.headerHome}>\n                    <TouchableOpacity\n                        onPress={() => Linking.openURL('https://www.asdenic.org')}>\n                        <Image source={require('../assets/asdenic.png')} style={styles.asdenicLogo}/>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                        onPress={() => Linking.openURL('https://www.scu.edu/engineering/labs--research/labs/frugal-innovation-hub/')}>\n                        <Image source={require('../assets/frugalHub.png')} style={styles.frugalHubLogoHome}/>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                        onPress={() => this.props.navigation.navigate('Welcome')}>\n                        <Text style={styles.logoutButton}>Cerrar sesión</Text>\n                    </TouchableOpacity>\n                </View>\n\n                <View style={styles.pageContent}>\n                    <Button style={styles.backButton}\n                        // hard coded to assume general user\n                        onPress={() => this.props.navigation.navigate('Home', { admin:false, bigAdmin:false })}>\n                        <Text style={styles.backText}>{'<'} Atrás</Text>\n                    </Button>\n                    \n                    <Text style={styles.waterTitle}>Clima</Text>\n                    <View style={styles.weatherForm}>\n                        <Calendar \n                            monthFormat={\"MMMM 'de' yyyy\"}\n                            maxDate={dateString}\n                            onDayPress={(day) => {this.props.navigation.navigate('WeatherDay', { date:day })}}\n                            // onDayPress={(day) => {getDayReports(day)}}\n                            theme={{\n                                todayTextColor: '#4a8eff',\n                                arrowColor: '#4a8eff',\n                                textDayFontSize: 18,\n                                textMonthFontSize: 24,\n                                textDayHeaderFontSize: 18\n                            }}\n                        />\n                        <Button full rounded success style={styles.blueButtonFull}\n                            onPress={() => this.props.navigation.navigate('WeatherReport', { date:dateOb, morning:true, latest:true })}>\n                            <Text style={styles.buttonText}>Último Informe del Clima</Text>\n                        </Button>\n                        \n                    </View>\n                    <Button style={styles.link}\n                        onPress={() => Linking.openURL('https://chat.whatsapp.com/BoW628hRShe5orkVmwG6Xc')}>\n                        <Text style={styles.incidentButton}>{'Contáctanos sobre el clima por WhatsApp aquí'}</Text>\n                    </Button>\n                </View>\n\n                <View style={styles.footer}>\n                </View>\n\n\n            </View>\n        );\n    }\n}\n\nexport default WeatherHome;"]},"metadata":{},"sourceType":"module"}