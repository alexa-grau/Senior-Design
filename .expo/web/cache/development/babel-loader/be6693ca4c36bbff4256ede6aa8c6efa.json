{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alexagrau/Documents/SeniorDesign/Senior-Design/screens/WeatherDay.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Form, Button } from \"native-base\";\nimport styles from \"../Style\";\nexport var WeatherDay = function (_React$Component) {\n  _inherits(WeatherDay, _React$Component);\n\n  var _super = _createSuper(WeatherDay);\n\n  function WeatherDay() {\n    var _this;\n\n    _classCallCheck(this, WeatherDay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var date, dateString, response, weatherReports;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              date = _this.props.navigation.state.params.date;\n              dateString = date.year;\n\n              if (date.month < 10) {\n                dateString += '/0' + date.month;\n              } else {\n                dateString += '/' + date.month;\n              }\n\n              if (date.day < 10) {\n                dateString += '/0' + date.day;\n              } else {\n                dateString += '/' + date.day;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3004/weather/' + dateString));\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 9:\n              weatherReports = _context.sent;\n\n              _this.setState({\n                data: weatherReports\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(WeatherDay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Weather reports mounting\");\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var params = this.props.navigation.state.params;\n      var date = params.date;\n      var buttonsList = React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }\n      }, \"No Reports Today\");\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.headerHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return Linking.openURL('https://www.asdenic.org');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/asdenic.png\"),\n        style: styles.asdenicLogo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return Linking.openURL('https://www.scu.edu/engineering/labs--research/labs/frugal-innovation-hub/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/frugalHub.png\"),\n        style: styles.frugalHubLogoHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Welcome');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.logoutButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"Cerrar sesi\\xF3n\"))), React.createElement(View, {\n        style: styles.pageContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('WeatherHome');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.backText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, '<', \" Atr\\xE1s\")), React.createElement(Text, {\n        style: styles.waterTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"Clima\"), React.createElement(View, {\n        style: styles.weatherForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.subTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, date.day, \"/\", date.month, \"/\", date.year), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, buttonsList))), React.createElement(View, {\n        style: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return WeatherDay;\n}(React.Component);\nWeatherDay.navigationOptions = {\n  title: 'WeatherDay'\n};\nexport default WeatherDay;","map":{"version":3,"sources":["/Users/alexagrau/Documents/SeniorDesign/Senior-Design/screens/WeatherDay.js"],"names":["React","Form","Button","styles","WeatherDay","state","data","fetchData","date","props","navigation","params","dateString","year","month","day","fetch","response","json","weatherReports","setState","console","log","buttonsList","container","headerHome","Linking","openURL","require","asdenicLogo","frugalHubLogoHome","navigate","logoutButton","pageContent","backButton","backText","waterTitle","weatherForm","subTitle","footer","Component","navigationOptions","title"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,IAAT,EAAeC,MAAf,QAA6B,aAA7B;AACA,OAAOC,MAAP;AAEA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAKIC,KALJ,GAKY;AACJC,MAAAA,IAAI,EAAE;AADF,KALZ;;AAAA,UASIC,SATJ,GASgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,cAAAA,IADI,GACG,MAAKC,KAAL,CAAWC,UAAX,CAAsBL,KAAtB,CAA4BM,MAA5B,CAAmCH,IADtC;AAEJI,cAAAA,UAFI,GAESJ,IAAI,CAACK,IAFd;;AAGR,kBAAGL,IAAI,CAACM,KAAL,GAAa,EAAhB,EAAmB;AACfF,gBAAAA,UAAU,IAAE,OAAKJ,IAAI,CAACM,KAAtB;AACH,eAFD,MAEO;AACHF,gBAAAA,UAAU,IAAE,MAAIJ,IAAI,CAACM,KAArB;AACH;;AACD,kBAAGN,IAAI,CAACO,GAAL,GAAW,EAAd,EAAiB;AACbH,gBAAAA,UAAU,IAAE,OAAKJ,IAAI,CAACO,GAAtB;AACH,eAFD,MAEO;AACHH,gBAAAA,UAAU,IAAE,MAAIJ,IAAI,CAACO,GAArB;AACH;;AAZO;AAAA,+CAceC,KAAK,CAAC,mCAAiCJ,UAAlC,CAdpB;;AAAA;AAcFK,cAAAA,QAdE;AAAA;AAAA,+CAeqBA,QAAQ,CAACC,IAAT,EAfrB;;AAAA;AAeFC,cAAAA,cAfE;;AAgBR,oBAAKC,QAAL,CAAc;AAACd,gBAAAA,IAAI,EAAEa;AAAP,eAAd;;AAhBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAThB;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCA4BwB;AAChBE,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,WAAKf,SAAL;AACH;AA/BL;AAAA;AAAA,6BAiCa;AAAA;;AACL,UAAMI,MAAM,GAAG,KAAKF,KAAL,CAAWC,UAAX,CAAsBL,KAAtB,CAA4BM,MAA3C;AACA,UAAIH,IAAI,GAAGG,MAAM,CAACH,IAAlB;AACA,UAAIe,WAAW,GAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAjB;AAEA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAACqB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAErB,MAAM,CAACsB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMC,OAAO,CAACC,OAAR,CAAgB,yBAAhB,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,yBAAtB;AAAiD,QAAA,KAAK,EAAEzB,MAAM,CAAC0B,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAMI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMH,OAAO,CAACC,OAAR,CAAgB,4EAAhB,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,2BAAtB;AAAmD,QAAA,KAAK,EAAEzB,MAAM,CAAC2B,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,EAWI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACrB,KAAL,CAAWC,UAAX,CAAsBqB,QAAtB,CAA+B,SAA/B,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE5B,MAAM,CAAC6B,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CAXJ,CADJ,EAkBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE7B,MAAM,CAAC8B,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE9B,MAAM,CAAC+B,UAAtB;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACzB,KAAL,CAAWC,UAAX,CAAsBqB,QAAtB,CAA+B,aAA/B,CAAN;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE5B,MAAM,CAACgC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,GAA/B,cAFJ,CADJ,EAMI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhC,MAAM,CAACiC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,EAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjC,MAAM,CAACkC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAElC,MAAM,CAACmC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B9B,IAAI,CAACO,GAApC,OAA0CP,IAAI,CAACM,KAA/C,OAAuDN,IAAI,CAACK,IAA5D,CADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUKU,WAVL,CAFJ,CAPJ,CAlBJ,EA0CI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAACoC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1CJ,CADJ;AAiDH;AAvFL;;AAAA;AAAA,EAAgCvC,KAAK,CAACwC,SAAtC;AAAapC,U,CACFqC,iB,GAAoB;AACvBC,EAAAA,KAAK,EAAE;AADgB,C;AAyF/B,eAAetC,UAAf","sourcesContent":["import React from 'react'\nimport { View, Text, Image, TouchableOpacity, Linking } from 'react-native'\nimport { Form, Button } from \"native-base\"\nimport styles from '../Style'\n\nexport class WeatherDay extends React.Component {\n    static navigationOptions = {\n        title: 'WeatherDay',\n    };\n\n    state = {\n        data: [],\n    };\n\n    fetchData = async() => {\n        let date = this.props.navigation.state.params.date;\n        let dateString = date.year;\n        if(date.month < 10){\n            dateString+='/0'+date.month;\n        } else {\n            dateString+='/'+date.month;\n        }\n        if(date.day < 10){\n            dateString+='/0'+date.day;\n        } else {\n            dateString+='/'+date.day;\n        }\n        // const response = await fetch('http://10.0.0.13:3004/reports');\n        const response = await fetch('http://localhost:3004/weather/'+dateString);\n        const weatherReports = await response.json();\n        this.setState({data: weatherReports});\n    }\n\n    componentDidMount() {\n        console.log(\"Weather reports mounting\");\n        this.fetchData();\n    }\n\n    render() {\n        const params = this.props.navigation.state.params;\n        let date = params.date;\n        let buttonsList=(<Text>No Reports Today</Text>);\n\n        return (\n            <View style={styles.container}>\n                <View style={styles.headerHome}>\n                    <TouchableOpacity\n                        onPress={() => Linking.openURL('https://www.asdenic.org')}>\n                        <Image source={require('../assets/asdenic.png')} style={styles.asdenicLogo}/>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                        onPress={() => Linking.openURL('https://www.scu.edu/engineering/labs--research/labs/frugal-innovation-hub/')}>\n                        <Image source={require('../assets/frugalHub.png')} style={styles.frugalHubLogoHome}/>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                        onPress={() => this.props.navigation.navigate('Welcome')}>\n                        <Text style={styles.logoutButton}>Cerrar sesión</Text>\n                    </TouchableOpacity>\n                </View>\n\n                <View style={styles.pageContent}>\n                    <Button style={styles.backButton}\n                        onPress={() => this.props.navigation.navigate('WeatherHome')}>\n                        <Text style={styles.backText}>{'<'} Atrás</Text>\n                    </Button>\n\n                    <Text style={styles.waterTitle}>Clima</Text>\n                    <View style={styles.weatherForm}>\n                        <Text style={styles.subTitle}>{date.day}/{date.month}/{date.year}</Text>\n                        <Form>\n                            {/* <Button full rounded success style={styles.blueButton}\n                                onPress={() => this.props.navigation.navigate('WeatherReport', { date:date, morning:true })}>\n                                <Text style={styles.buttonText}>Mañana</Text>\n                            </Button>\n\n                            <Button full rounded success style={[styles.blueButton, {marginTop: 20}]}\n                                onPress={() => this.props.navigation.navigate('WeatherReport', { date:date, morning:false })}> \n                                <Text style={styles.buttonText}>Tarde</Text>\n                            </Button> */}\n                            {buttonsList}\n                        </Form>\n                    </View>\n                </View>\n\n                <View style={styles.footer}>\n                </View>\n\n\n            </View>\n        );\n    }\n}\n\nexport default WeatherDay;"]},"metadata":{},"sourceType":"module"}